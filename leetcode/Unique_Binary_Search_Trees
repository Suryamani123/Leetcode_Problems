/* nth catalan number, dp solution 

Unique BSTs from n nodes ------  nth catalan number explanation 

https://www.quora.com/Given-n-how-many-structurally-unique-BSTs-binary-search-trees-that-store-values-1-to-n-are-there-How-would-I-come-up-with-the-solution-Can-you-explain-the-thought-process-that-leads-to-the-solution


 */

class Solution {
public:
 
   int catalan(int n){
        int dp[n+1];
       
        dp[0]=1;
        dp[1]=1;
 for(int i=2;i<=n;i++){
     dp[i]=0;
     for(int j=1;j<=i;j++){
     
     dp[i]+=dp[j-1]*dp[i-j];
   
 }   
 }
       return dp[n];
    }
    int numTrees(int n) {
        
        int sum=catalan(n);
        cout<<sum<<endl;
        return sum;
        
        
      /*  
        if(n<=1)
            return 1;
        else{
            int sum=0;
            for(int i=1;i<=n;i++){
                
            int left=numTrees(i-1);
                int right=numTrees(n-i);
                sum+=left*right;
        }
         return sum;   
        }*/
        
        
    }
};




/* recursive solution ofthis problem as nth catalan number */


class Solution {
public:
    int numTrees(int n) {
        if(n<=1)
            return 1;
        else{
            int sum=0;
            for(int i=1;i<=n;i++){
                
            int left=numTrees(i-1);
                int right=numTrees(n-i);
                sum+=left*right;
        }
         return sum;   
        }
    }
};
