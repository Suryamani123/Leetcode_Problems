/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
#include<bits/stdc++.h>
class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        queue<TreeNode* >q;
        vector< vector<int> >v;
        if(!root)
            return v;
        if(root!=NULL)
        q.push(root);
         TreeNode *node=root;
        while(!q.empty()){
        
            //TreeNode *node;
            int s=q.size();
            vector<int>v2;
         for(int i=0;i<s;i++)
         { node=q.front();
             if(node->left)
                q.push(node->left);
            if(node->right)
                q.push(node->right);
             
             v2.push_back(node->val);
             q.pop();
         }
            
           // cout<<node->val<<" ";
            
            v.push_back(v2);
            
            
            
            
        }
        reverse(v.begin(),v.end());
            return v;
    }

};
